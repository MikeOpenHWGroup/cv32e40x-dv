# YAML file to specify a regression testlist
---
# Header
name: cv32e40s_full
description: Release regression for CV32E40S

# List of builds
builds:
  corev-dv:
    cmd: make comp_corev-dv
    dir: cv32e40s/sim/uvmt
  uvmt_cv32e40s:
    cmd: make comp
    dir: cv32e40s/sim/uvmt

# List of tests
tests:
  hello-world:
    build: uvmt_cv32e40s
    description: uvm_hello_world_test
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=hello-world
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  csr_instructions:
    build: uvmt_cv32e40s
    description: CSR instruction test
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=csr_instructions
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  # FIXME:STRICHMO:uncomment with new controller...currently fails in RTL  
  # generic_exception_test:
  #   build: uvmt_cv32e40s
  #   description: Generic exception test
  #   dir: cv32e40s/sim/uvmt
  #   cmd: make test COREV=YES TEST=generic_exception_test
  #   makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  # FIXME:STRICHMO:uncomment with new controller...currently fails in RTL  
  # illegal_instr_test:
  #   build: uvmt_cv32e40s
  #   description: Illegal instruction test
  #   dir: cv32e40s/sim/uvmt
  #   cmd: make test COREV=YES TEST=illegal_instr_test

  cv32e40s_csr_access_test:
    build: uvmt_cv32e40s
    description: CSR Access Mode Test
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=cv32e40s_csr_access_test
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  # FIXME:STRICHMO:uncomment with new controller...currently fails in RTL  
  # requested_csr_por:
  #   build: uvmt_cv32e40s
  #   description: CSR PoR test
  #   dir: cv32e40s/sim/uvmt
  #   cmd: make test COREV=YES TEST=requested_csr_por
  #   makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  # FIXME:STRICHMO:uncomment with new controller...currently fails in RTL  
  # modeled_csr_por:
  #   build: uvmt_cv32e40s
  #   description: Modeled CSR PoR test
  #   dir: cv32e40s/sim/uvmt
  #   cmd: make test COREV=YES TEST=modeled_csr_por
  #   makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  csr_instr_asm:
    build: uvmt_cv32e40s
    description: CSR instruction assembly test
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=csr_instr_asm
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  # FIXME:strichmo: Some instability in this test, not suitable for rel_check yet
  # perf_counters_instructions:
  #   build: uvmt_cv32e40s
  #   description: Performance counter test
  #   dir: cv32e40s/sim/uvmt
  #   cmd: make test COREV=YES TEST=perf_counters_instructions

  # FIXME:STRICHMO:uncomment with new controller...currently fails in RTL  
  # hpmcounter_basic_test:
  #   build: uvmt_cv32e40s
  #   description: Hardware performance counter basic test
  #   dir: cv32e40s/sim/uvmt
  #   cmd: make test COREV=YES TEST=hpmcounter_basic_testC
  #   makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  # FIXME:STRICHMO:uncomment with new controller...currently fails in RTL  
  # hpmcounter_hazard_test:
  #   build: uvmt_cv32e40s
  #   description: Hardware performance counter hazard test
  #   dir: cv32e40s/sim/uvmt
  #   cmd: make test COREV=YES TEST=hpmcounter_hazard_test
  #   makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  riscv_ebreak_test_0:
    build: uvmt_cv32e40s
    description: Static corev-dv ebreak
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=riscv_ebreak_test_0
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  riscv_arithmetic_basic_test_0:
    build: uvmt_cv32e40s
    description: Static riscv-dv arithmetic test 0
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=riscv_arithmetic_basic_test_0
    num: 1
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  riscv_arithmetic_basic_test_1:
    build: uvmt_cv32e40s
    description: Static riscv-dv arithmetic test 1
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=riscv_arithmetic_basic_test_1
    num: 1
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  corev_rand_arithmetic_base_test:
    build: uvmt_cv32e40s
    description: Generated corev-dv arithmetic test
    dir: cv32e40s/sim/uvmt    
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_arithmetic_base_test
    num: 2
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  corev_rand_instr_test:
    build: uvmt_cv32e40s
    description: Generated corev-dv random instruction test
    dir: cv32e40s/sim/uvmt
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_instr_test
    num: 2
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  # FIXME:STRICHMO:uncomment with new controller...currently fails in RTL  
  # corev_rand_illegal_instr_test:
  #   build: uvmt_cv32e40s
  #   description: Generated corev-dv random instruction test with illegal instructions
  #   dir: cv32e40s/sim/uvmt
  #   cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_illegal_instr_test
  #   num: 2
  #   makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  corev_rand_jump_stress_test:
    build: uvmt_cv32e40s
    description: Generated corev-dv jump stress test
    dir: cv32e40s/sim/uvmt    
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_jump_stress_test
    num: 2
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable
  
  corev_rand_interrupt:
    build: uvmt_cv32e40s
    description: Generated corev-dv random interrupt test
    dir: cv32e40s/sim/uvmt    
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_interrupt
    num: 2
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  # FIXME:strichmo:This is currently known to not work, update later
  # corev_rand_debug:
  #   build: uvmt_cv32e40s
  #   description: Generated corev-dv random debug test
  #   dir: cv32e40s/sim/uvmt    
  #   cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_debug
  #   num: 2

  # FIXME:strichmo:This is currently known to not work, update later
  # corev_rand_debug_single_step:
  #   build: uvmt_cv32e40s
  #   description: debug random test with single-stepping
  #   dir: cv32e40s/sim/uvmt
  #   cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_debug_single_step
  #   num: 2

  # FIXME:strichmo:This is currently known to not work, update later
  # corev_rand_debug_ebreak:
  #   build: uvmt_cv32e40s
  #   description: debug random test with ebreaks from ROM
  #   dir: cv32e40s/sim/uvmt
  #   cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_debug_ebreak
  #   num: 2

  # FIXME:strichmo:This is currently known to not work, update later
  #   corev_rand_interrupt_wfi:
  #     build: uvmt_cv32e40s
  #     description: Generated corev-dv random interrupt WFI test
  #     dir: cv32e40s/sim/uvmt    
  #     cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_interrupt_wfi
  #     num: 2
  #     makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  # FIXME:strichmo:This is currently known to not work, update later
  # corev_rand_interrupt_debug:
  #   build: uvmt_cv32e40s
  #   description: Generated corev-dv random interrupt WFI test with debug
  #   dir: cv32e40s/sim/uvmt    
  #   cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_interrupt_debug
  #   num: 2

  # FIXME:STRICHMO:uncomment with new controller...currently fails in RTL  
  # corev_rand_interrupt_exception:
  #   build: uvmt_cv32e40s
  #   description: Generated corev-dv random interrupt WFI test with exceptions
  #   dir: cv32e40s/sim/uvmt    
  #   cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_interrupt_exception
  #   num: 2
  #   makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  corev_rand_interrupt_nested:
    build: uvmt_cv32e40s
    description: Generated corev-dv random interrupt WFI test with random nested interrupts
    dir: cv32e40s/sim/uvmt    
    cmd: make gen_corev-dv test COREV=YES TEST=corev_rand_interrupt_nested
    num: 2
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  illegal:
    build: uvmt_cv32e40s
    description: Illegal-riscv-tests
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=illegal
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  fibonacci:
    build: uvmt_cv32e40s
    description: Fibonacci test
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=fibonacci
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  misalign:
    build: uvmt_cv32e40s
    description: Misalign test
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=misalign
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  dhrystone:
    build: uvmt_cv32e40s
    description: Dhrystone test
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=dhrystone
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  debug_test:
    build: uvmt_cv32e40s
    description: Debug Test 1
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=debug_test
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  # FIXME:strichmo:This is currently known to not work, update later
  # debug_test_reset:
  #   build: uvmt_cv32e40s
  #   description: Debug reset test
  #   dir: cv32e40s/sim/uvmt
  #   cmd: make test COREV=YES TEST=debug_test_reset

  # FIXME:STRICHMO:uncomment with new controller...currently fails in RTL  
  # interrupt_bootstrap:
  #   build: uvmt_cv32e40s
  #   description: Interrupt bootstrap test
  #   dir: cv32e40s/sim/uvmt
  #   cmd: make test COREV=YES TEST=interrupt_bootstrap
  #   makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  interrupt_test:
    build: uvmt_cv32e40s
    description: Interrupt test
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=interrupt_test
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  isa_fcov_holes:
    build: uvmt_cv32e40s
    description: ISA function coverage test
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=isa_fcov_holes
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  cv32e40s_csr_access_test:
    build: uvmt_cv32e40s
    description: Randomly generated CSR access test
    dir: cv32e40s/sim/uvmt
    cmd: make test COREV=YES TEST=cv32e40s_csr_access_test
    makearg: USER_RUN_FLAGS=+rand_stall_obi_disable

  # FIXME:STRICHMO:uncomment with new controller...currently fails in RTL  
  # cv32e40s_readonly_csr_access_test:
  #   build: uvmt_cv32e40s
  #   description: Manually generated CSR access test of RO CSRs
  #   dir: cv32e40s/sim/uvmt
  #   cmd: make test COREV=YES TEST=cv32e40s_readonly_csr_access_test
  #   makearg: USER_RUN_FLAGS=+rand_stall_obi_disable
